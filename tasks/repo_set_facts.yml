---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: Set stripped local requirement names
  set_fact:
    local_requirement_names_stripped: "{% for req in local_packages.results.0.item.packages %}{{ req.split('#')[0].strip().replace('-', '_') }}{% if not loop.last %}||{% endif %}{% endfor %}"
  tags:
    - repo-set-requirement-names-filtered
    - repo-set-requirement-names
    - repo-set-requirements

- name: Set local normalized requirement names
  set_fact:
    local_requirement_normalized: "{{ local_requirement_names_stripped.split('||') }}"
  tags:
    - repo-set-requirement-names-filtered
    - repo-set-requirement-names
    - repo-set-requirements

- name: Retrieve upper constraints content
  slurp:
    src: "{{ repo_build_git_dir }}/requirements/upper-constraints.txt"
  register: slurp_upper_constraints
  tags:
    - repo-set-constraints
    - repo-get-upper-constraints
    - repo-build-constraints-file

- name: Decode the upper constraints content
  set_fact:
    _upper_constraints: "{{ slurp_upper_constraints.content | b64decode | splitlines }}"
  when: slurp_upper_constraints | success
  tags:
    - repo-set-constraints
    - repo-build-constraints-file

- name: Normalise the upper constraints
  set_fact:
    upper_constraints: "{{ local_requirement_normalized | pip_constraint_update(_upper_constraints) }}"
  when: slurp_upper_constraints | success
  tags:
    - repo-set-constraints
    - repo-build-constraints-file

- name: Apply the upper constraint overrides
  set_fact:
    upper_constraints: "{{ upper_constraints | pip_constraint_update(repo_build_upper_constraints_overrides) }}"
  when: repo_build_upper_constraints_overrides | length > 0
  tags:
    - repo-set-constraints
    - repo-build-constraints-file

